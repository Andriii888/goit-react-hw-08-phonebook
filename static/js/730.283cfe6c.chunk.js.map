{"version":3,"file":"static/js/730.283cfe6c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/contactItemStyle.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsView/ContactsView.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@chakra-ui/form-control/dist/chunk-PXXQR4UW.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-JSSKUSQH.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input } from '@chakra-ui/react'\nimport { addContact } from '../../redux/operations';\nimport { Button } from \"@chakra-ui/react\";\n\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contactCurrent = useSelector(state => state.numbers.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [done, setDone] = useState(false);\n\n  const handleInputChange = e => {\n    setDone(false);\n    if (e.currentTarget.name === 'name') {\n      return setName(e.currentTarget.value);\n    }\n    return setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setDone(false);\n    const repietedContact = contactCurrent.filter(contact => {\n      const saved = contact.name.toLowerCase() === name.toLowerCase();\n\n      return saved && name;\n    });\n    if (repietedContact.length > 0) {\n      return setDone(true);\n    }\n    const info = { name, phone: number };\n    dispatch(addContact(info));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\nconst style={width:'250px'}\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={style}>\n        <h2>Name</h2>\n        <label htmlFor=\"name\">\n          <Input\n          variant='filled' placeholder='Filled'\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <h2>Number</h2>\n        <label htmlFor=\"number\">\n          <Input\n          variant='filled' placeholder='Filled'\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <Button type=\"submit\" onSubmit={handleSubmit}>\n          Add contact\n        </Button>\n      </form>\n      {done && <h1>This contact {name} already done</h1>}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { findeName } from '../../redux/filterSlice';\n\nexport const FilterByName = () => {\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(findeName(e.currentTarget.value));\n  };\n\n  return (\n    <>\n      <h3>Finde contacts by name</h3>\n      <input\n        onChange={changeFilter}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Finde contacts by name\"\n        required\n      />\n    </>\n  );\n};\n\nPropTypes.Filter = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactItemStyle = styled.li`\n  width: 300px;\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n\n  button {\n    width: 60px;\n    height: 25px;\n  }\n  align-items: center;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactItemStyle } from './contactItemStyle.styled';\nimport { deleteContact } from '../../redux/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <ContactItemStyle>\n      <p>\n        {name}:{number}\n      </p>\n      <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </button>\n    </ContactItemStyle>\n  );\n};\n\nPropTypes.ContactItem = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const finedContacts = useSelector(state => state.filters.finde);\n  const currentState = useSelector(state => state.numbers.items);\n\n  const currentContacts = () => {\n    if (finedContacts) {\n      const normalizedFilter = finedContacts.toLowerCase();\n      return currentState.filter(contact => {\n        return contact.name.toLowerCase().includes(normalizedFilter);\n      });\n    }\n    return currentState;\n  };\n  return (\n    <ul>\n      {currentContacts().map(contact => {\n        const { name, number, id } = contact;\n        return <ContactItem name={name} number={number} key={id} id={id} />;\n      })}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/operations';\nimport { FilterByName } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Heading } from '@chakra-ui/react';\n\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Heading as='h1' size='4xl' noOfLines={1}>PhoneBook</Heading>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <FilterByName />\n      <ContactList />\n    </>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => {\n      var _a, _b;\n      return {\n        ...props2,\n        ref: forwardedRef,\n        \"data-focus\": dataAttr(isFocused),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        id: (_a = props2.id) != null ? _a : labelId,\n        htmlFor: (_b = props2.htmlFor) != null ? _b : id\n      };\n    },\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n"],"names":["ContactForm","dispatch","useDispatch","contactCurrent","useSelector","state","numbers","items","useState","name","setName","number","setNumber","done","setDone","handleInputChange","e","currentTarget","value","handleSubmit","preventDefault","filter","contact","toLowerCase","length","info","phone","addContact","reset","onSubmit","style","width","htmlFor","I","variant","placeholder","onChange","type","pattern","title","required","FilterByName","findeName","PropTypes","ContactItemStyle","styled","ContactItem","id","onClick","deleteContact","onDeleteContact","ContactList","finedContacts","filters","finde","currentState","normalizedFilter","includes","currentContacts","map","ContactsView","useEffect","fetchContacts","as","size","noOfLines","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","ref","styles","useMultiStyleConfig","idProp","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","getLabelProps","_a","_b","dataAttr","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","chakra","__css","displayName","field","helperText","useFormControl","_c","disabled","readOnly","rest","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","Heading","useStyleConfig"],"sourceRoot":""}