{"version":3,"file":"static/js/730.aca84b35.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/contactItemStyle.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsView/ContactsView.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from '../../redux/operations';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contactCurrent = useSelector(state => state.numbers.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [done, setDone] = useState(false);\n\n  const handleInputChange = e => {\n    setDone(false);\n    if (e.currentTarget.name === 'name') {\n      return setName(e.currentTarget.value);\n    }\n    return setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setDone(false);\n    const repietedContact = contactCurrent.filter(contact => {\n      const saved = contact.name.toLowerCase() === name.toLowerCase();\n\n      return saved && name;\n    });\n    if (repietedContact.length > 0) {\n      return setDone(true);\n    }\n    const info = { name, phone: number };\n    dispatch(addContact(info));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <h2>Name</h2>\n        <label htmlFor=\"name\">\n          <input\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <h2>Number</h2>\n        <label htmlFor=\"number\">\n          <input\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" onSubmit={handleSubmit}>\n          Add contact\n        </button>\n      </form>\n      {done && <h1>This contact {name} already done</h1>}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { findeName } from '../../redux/filterSlice';\n\nexport const FilterByName = () => {\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(findeName(e.currentTarget.value));\n  };\n\n  return (\n    <>\n      <h3>Finde contacts by name</h3>\n      <input\n        onChange={changeFilter}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Finde contacts by name\"\n        required\n      />\n    </>\n  );\n};\n\nPropTypes.Filter = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactItemStyle = styled.li`\n  width: 300px;\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n\n  button {\n    width: 60px;\n    height: 25px;\n  }\n  align-items: center;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactItemStyle } from './contactItemStyle.styled';\nimport { deleteContact } from '../../redux/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <ContactItemStyle>\n      <p>\n        {name}:{number}\n      </p>\n      <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </button>\n    </ContactItemStyle>\n  );\n};\n\nPropTypes.ContactItem = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const finedContacts = useSelector(state => state.filters.finde);\n  const currentState = useSelector(state => state.numbers.items);\n\n  const currentContacts = () => {\n    if (finedContacts) {\n      const normalizedFilter = finedContacts.toLowerCase();\n      return currentState.filter(contact => {\n        return contact.name.toLowerCase().includes(normalizedFilter);\n      });\n    }\n    return currentState;\n  };\n  return (\n    <ul>\n      {currentContacts().map(contact => {\n        const { name, number, id } = contact;\n        return <ContactItem name={name} number={number} key={id} id={id} />;\n      })}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/operations';\nimport { FilterByName } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <h1>PhoneBook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <FilterByName />\n      <ContactList />\n    </>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ContactForm","dispatch","useDispatch","contactCurrent","useSelector","state","numbers","items","useState","name","setName","number","setNumber","done","setDone","handleInputChange","e","currentTarget","value","handleSubmit","preventDefault","filter","contact","toLowerCase","length","info","phone","addContact","reset","onSubmit","htmlFor","onChange","type","pattern","title","required","FilterByName","findeName","PropTypes","ContactItemStyle","styled","ContactItem","id","onClick","deleteContact","onDeleteContact","ContactList","finedContacts","filters","finde","currentState","normalizedFilter","includes","currentContacts","map","ContactsView","useEffect","fetchContacts","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}